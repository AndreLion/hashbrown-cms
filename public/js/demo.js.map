{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Client/demo.js"],"names":["DemoApi","localStorage","setItem","location","hash","reload","resource","id","cache","getItem","JSON","parse","e","Array","isArray","getNativeResource","i","name","data","getCache","foundExisting","splice","push","stringify","method","url","replace","toUpperCase","debug","log","Promise","resolve","reject","setTimeout","requestSync","get","post","delete","query","split","params","length","parseUrl","setCache","indexOf","schemaId","match","Error","sort","parentId","HashBrown","Models","Content","create","console","type","isAdmin","isCurrent","username","fullName","email","scopes","media","title","locked","schemas","require","result","k","isLocked","Helpers","SchemaHelper","getModel","ContentSchema","FieldSchema","_","append","document","body","button","class","click","reset","RequestHelper","request","customRequest","startSocket","getSchemaWithParentFields","schema","getSchemaByIdSync","parentSchemaId","then","parentSchema","mergedSchema","mergeSchemas","Crisp","View","prototype","fetch","view","model","modelUrl","_init","modelFunction","reloadResource","User","Media","Connection","window","resources"],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","'use strict';\n\n/**\n * Demo API\n *\n * @memberof HashBrown.Client\n */\nclass DemoApi {\n    /**\n     * Clears the cache\n     */\n    static reset() {\n        localStorage.setItem('demo', null);\n\n        location.hash = '/content/';\n        location.reload();\n    }\n\n    /**\n     * Gets the fake API cache\n     */\n    static getCache(resource, id) {\n        let cache = this.cache;\n        \n        if(!cache) {\n            try {\n                cache = localStorage.getItem('demo') || '{}';\n                cache = JSON.parse(cache);\n            } catch(e) {\n                cache = {};\n            }\n            \n            cache = cache || {};\n        }\n\n        this.cache = cache;\n\n        if(!resource) {\n            return cache;\n        }\n\n        if(!cache[resource] || !Array.isArray(cache[resource])) {\n            cache[resource] = DemoApi.getNativeResource(resource) || [];\n        }\n\n        if(!id) {\n            return cache[resource];\n        }\n\n        for(let i in cache[resource]) {\n            if(cache[resource][i].id === id || cache[resource][i].name === id) {\n                return cache[resource][i];\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the fake API\n     */\n    static setCache(resource, id, data) {\n        let cache = DemoApi.getCache();\n\n        if(!cache[resource] || !Array.isArray(cache[resource])) {\n            cache[resource] = DemoApi.getNativeResource(resource) || [];\n        }\n\n        let foundExisting = false;\n\n        for(let i in cache[resource]) {\n            if(cache[resource][i].id == id) {\n                // Update data\n                if(data) {\n                    cache[resource][i] = data;\n\n                // Delete data\n                } else {\n                    cache[resource].splice(i, 1);\n                }\n\n                foundExisting = true;\n                \n                break;\n            }\n        }\n\n        if(!foundExisting && data) {\n            cache[resource].push(data);\n        }\n\n        localStorage.setItem('demo', JSON.stringify(cache));\n\n        return data;\n    }\n\n    /**\n     * Request\n     */\n    static request(method, url, data) {\n        url = url.replace('/api/demo/live/', '');\n        method = method.toUpperCase();\n\n        debug.log(method + ' ' + url, DemoApi);\n\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(DemoApi.requestSync(method, url, data));\n            }, 100);\n        });\n    }\n\n    static requestSync(method, url, data) {\n        url = url.replace('/api/demo/live/', '');\n        method = method.toUpperCase();\n        \n        debug.log(method + ' ' + url, DemoApi);\n        \n        switch(method) {\n            case 'GET':\n                return DemoApi.get(url);\n\n            case 'POST':\n                return DemoApi.post(url, data);\n\n            case 'DELETE':\n                return DemoApi.delete(url);\n        }\n\n        return data;\n    }\n\n    /**\n     * Parses a resource url\n     */\n    static parseUrl(url) {\n        let query = {};\n        let split = url.split('/');\n\n        query.resource = split[0];\n        query.params = url.split('?')[1];\n\n        if(split.length > 1) {\n            query.id = split[1].replace('?' + query.params, '');\n        }\n\n        return query;\n    }\n\n    /**\n     * Delete\n     */\n    static delete(url) {\n        let query = DemoApi.parseUrl(url);\n\n        return DemoApi.setCache(query.resource, query.id, null);\n    }\n\n    /**\n     * Get\n     */\n    static get(url) {\n        let query = DemoApi.parseUrl(url);\n\n        return DemoApi.getCache(query.resource, query.id);\n    }\n\n    /**\n     * Post\n     */\n    static post(url, data) {\n        let query = DemoApi.parseUrl(url);\n\n        // Publish\n        if(url == 'content/publish' || url == 'content/unpublish' || url == 'content/preview') {\n            return Promise.resolve();\n        }\n\n        // Create new\n        if(url.indexOf('content/new') > -1) {\n            let schemaId = url.match(/content\\/new\\/([a-zA-Z0-9]+)/);\n\n            if(!schemaId) {\n                throw new Error('No Schema id specified');\n            }\n\n            schemaId = schemaId[1];\n\n            let sort = url.match(/\\?sort=([0-9]*)/);\n\n            if(sort) {\n                sort = sort[2];\n            }\n            \n            let parentId = url.match(/\\&parent=([0-9a-z]*)/);\n\n            if(parentId) {\n                parentId = parentId[1];\n            }\n\n            data = HashBrown.Models.Content.create(schemaId);\n                \n            data.parentId = parentId;\n            data.sort = sort;\n\n            query = {\n                resource: 'content',\n                id: data.id\n            };\n        }\n\n        console.log('--- POST data:', data);\n\n        return DemoApi.setCache(query.resource, query.id, data);\n    }\n\n    /**\n     * Gets a native resource\n     */\n    static getNativeResource(type) {\n        switch(type) {\n            case 'users':\n                return [\n                    {\n                        id: '4173f094621d4a882f912ccaf1cc6613a386519e',\n                        isAdmin: true,\n                        isCurrent: true,\n                        username: 'demouser',\n                        fullName: 'Demo User',\n                        email: 'demo@user.com',\n                        scopes: {}\n                    }\n                ];\n\n            case 'settings':\n                return [\n                    {\n                        id: 'providers',\n                        media: '8c75aa0739cf66bcac269f01ab9007e666bd941b'\n                    }\n                ];\n\n            case 'media':\n                return [\n\t\t\t\t\t{\"id\":\"50d05eee9088c589bfd5a5a3a3043c0ebcc4972b\",\"remote\":true,\"icon\":\"file-image-o\",\"name\":\"banner.jpg\",\"url\":\"media/50d05eee9088c589bfd5a5a3a3043c0ebcc4972b/banner-flat-pink.jpg\",\"folder\":\"banners\"} \n                ];\n\n            case 'connections':\n                return [\n                    {\n                        id: '8c75aa0739cf66bcac269f01ab9007e666bd941b',\n                        title: 'My website',\n                        url: 'example.com',\n                        locked: true\n                    }\n                ];\n\n            case 'content':\n                return [\n                    {\n                        \"locked\": false,\n                        \"local\": false,\n                        \"remote\": false,\n                        \"id\": \"91f1ec2b984f291377c2dc488be2ebbefb46dd9a\",\n                        \"parentId\": \"\",\n                        \"createdBy\": \"4173f094621d4a882f912ccaf1cc6613a386519e\",\n                        \"updatedBy\": \"4173f094621d4a882f912ccaf1cc6613a386519e\",\n                        \"createDate\": \"2016-09-05T06:52:17.646Z\",\n                        \"updateDate\": \"2017-08-03T15:55:10.590Z\",\n                        \"publishOn\": null,\n                        \"unpublishOn\": null,\n                        \"schemaId\": \"591a897ad572cadae5115ef05726d9ead2725dc5\",\n                        \"isPublished\": true,\n                        \"hasPreview\": false,\n                        \"sort\": -1,\n                        \"properties\": {\n                            \"title\": \"HashBrown CMS\",\n                            \"url\": \"/\",\n                            \"sections\": [\n                                {\n                                    \"value\": {\n                                        \"image\": \"50d05eee9088c589bfd5a5a3a3043c0ebcc4972b\",\n                                        \"text\": \"## HashBrown CMS\\n\\nCreate once. Publish anywhere.\" \n                                    },\n                                    \"schemaId\": \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\"\n                                },\n                                {\n                                    \"value\": {\n                                        \"text\": \"## Why HashBrown?\\n\\n### Remote management\\n\\nSeparate your concerns with a truly modern approach to content management. Your websites won't know what hit them.\\n\\n### Multiple projects at once\\n\\nWhy worry about several CMS'es, when you only need one?\\n\\n### Several environments for each project\\n\\nWe get it. You need to test your content before you go live.\\n\\n### Multilingual\\n\\nRemember the last time you used a truly elegant localisation solution in a CMS? We don't either.\\n\\n### Plugin support\\n\\nIf your needs aren't met at the core level, you can add anything you can imagine.\\n\\n### Content format consistency\\n\\nWhen you are passing complex, format-agnostic data around, document databases are the way to go. HashBrown knows what's up.\\n\\n### Painless backups\\n\\nHashBrown has your back in seconds.\\n\\n### Small footprint\\n\\nYou could probably run HashBrown on your toaster at home.\"\n                                    },\n                                    \"schemaId\": \"904e8e7570ddb37ea1f31d210db47cd15f92ff92\"\n                                }\n                            ],\n                            \"description\": \"Create once. Publish anywhere.\"\n                        },\n                        \"settings\": {\n                            \"publishing\": {\n                                \"connectionId\": \"8c75aa0739cf66bcac269f01ab9007e666bd941b\",\n                                \"applyToChildren\": true\n                            }\n                        }\n                    }\n                ];\n\n            case 'schemas':\n                let schemas = {\n                    'contentBase': require('Common/Schemas/Content/contentBase.json'),\n                    'page': require('Common/Schemas/Content/page.json'),\n                    'array': require('Common/Schemas/Field/array.json'),\n                    'boolean': require('Common/Schemas/Field/boolean.json'),\n                    'contentReference': require('Common/Schemas/Field/contentReference.json'),\n                    'contentSchemaReference': require('Common/Schemas/Field/contentSchemaReference.json'),\n                    'date': require('Common/Schemas/Field/date.json'),\n                    'dropdown': require('Common/Schemas/Field/dropdown.json'),\n                    'fieldBase': require('Common/Schemas/Field/fieldBase.json'),\n                    'language': require('Common/Schemas/Field/language.json'),\n                    'mediaReference': require('Common/Schemas/Field/mediaReference.json'),\n                    'number': require('Common/Schemas/Field/number.json'),\n                    'resourceReference': require('Common/Schemas/Field/resourceReference.json'),\n                    'richText': require('Common/Schemas/Field/richText.json'),\n                    'string': require('Common/Schemas/Field/string.json'),\n                    'struct': require('Common/Schemas/Field/struct.json'),\n                    'tags': require('Common/Schemas/Field/tags.json'),\n                    'url': require('Common/Schemas/Field/url.json'),\n                };\n       \n                let result = [];\n\n                for(let k in schemas) {\n                    schemas[k].id = k;\n\n                    if(k === 'contentBase' || k === 'page' || schemas[k].type == 'content') {\n                        schemas[k].type = 'content';\n                    } else {\n                        schemas[k].type = 'field';\n                    }\n\n                    if(schemas[k].isLocked !== false) {\n                        schemas[k].isLocked = true;\n                    }\n\n                    result.push(HashBrown.Helpers.SchemaHelper.getModel(schemas[k]));\n                }\n\n                // Section page\n                result.push(new HashBrown.Models.ContentSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"591a897ad572cadae5115ef05726d9ead2725dc5\",\n                    \"name\": \"Section Page\",\n                    \"icon\": \"file\",\n                    \"parentSchemaId\": \"page\",\n                    \"hiddenProperties\": [],\n                    \"defaultTabId\": \"content\",\n                    \"tabs\": {},\n                    \"fields\": {\n                        \"properties\": {\n                            \"sections\": {\n                                \"tabId\": \"content\",\n                                \"label\": \"Sections\",\n                                \"tabId\": \"content\",\n                                \"schemaId\": \"array\",\n                                \"config\": {\n                                    \"allowedSchemas\": [\"904e8e7570ddb37ea1f31d210db47cd15f92ff92\", \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\"]\n                                }\n                            }\n                        }\n                    },\n                    \"allowedChildSchemas\": [\"591a897ad572cadae5115ef05726d9ead2725dc5\"],\n                    \"type\": \"content\"\n                }));\n\n                // Section\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"local\": false,\n                    \"remote\": false,\n                    \"id\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"name\": \"Section\",\n                    \"icon\": \"file\",\n                    \"parentSchemaId\": \"struct\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"type\": \"field\"\n                }));\n\n                // Rich text section\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"904e8e7570ddb37ea1f31d210db47cd15f92ff92\",\n                    \"name\": \"Rich Text Section\",\n                    \"icon\": \"file-text-o\",\n                    \"parentSchemaId\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"config\": {\n                        \"struct\": {\n                            \"text\": {\n                                \"label\": \"Text\",\n                                \"tabId\": \"content\",\n                                \"schemaId\": \"richText\"\n                            }\n                        }\n                    },\n                    \"type\": \"field\"\n                }));\n\n                // Hero\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\",\n                    \"name\": \"Hero Section\",\n                    \"icon\": \"image\",\n                    \"parentSchemaId\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"config\": {\n                        \"struct\": {\n                            \"image\": {\n                                \"label\": \"Image\",\n                                \"schemaId\": \"mediaReference\"\n                            },\n                            \"text\": {\n                                \"label\": \"Text\",\n                                \"schemaId\": \"richText\"\n                            }\n                        }\n                    },\n                    \"type\": \"field\"\n                }));\n\n                return result;\n\n            default:\n                return [];\n        }\n    }\n}\n\nHashBrown.DemoApi = DemoApi;\n\n// Add reset button\n_.append(document.body, \n    _.button({class: 'widget widget--button condensed page--environment__demo__reset'},\n        'Reset demo'\n    ).click(() => {\n        DemoApi.reset();               \n    })\n);\n\n// Override normal api call\nHashBrown.Helpers.RequestHelper.request = DemoApi.request;\nHashBrown.Helpers.RequestHelper.customRequest = DemoApi.request;\n\n// ----------\n// Debug socket\n// ----------\ndebug.startSocket = () => {}\n\n// ----------\n// SchemaHelper\n// ----------\nHashBrown.Helpers.SchemaHelper.getSchemaWithParentFields = (id) => {\n    let schema = HashBrown.Helpers.SchemaHelper.getSchemaByIdSync(id);\n\n    if(schema.parentSchemaId) {\n        return HashBrown.Helpers.SchemaHelper.getSchemaWithParentFields(schema.parentSchemaId)\n        .then((parentSchema) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    let mergedSchema = HashBrown.Helpers.SchemaHelper.mergeSchemas(schema, parentSchema);\n\n                    resolve(mergedSchema);\n                }, 100);\n            });\n        });\n    } else {\n        return Promise.resolve(schema);\n    }\n};\n\n// ----------\n// Crisp UI\n// ----------\nCrisp.View.prototype.fetch = function fetch() {\n    let view = this;\n\n    function getModel() {\n        // Get model from URL\n        if(!view.model && typeof view.modelUrl === 'string') {\n            view.model = DemoApi.requestSync('get', view.modelUrl);\n            view._init();\n        \n        // Get model with function\n        } else if(!view.model && typeof view.modelFunction === 'function') {\n            view.modelFunction(function(data) {\n                view.model = data;\n\n                view._init();\n            });\n\n        // Just perform the initialisation\n        } else {\n            view._init();\n        }\n    }\n\n    // Get the model\n    getModel();    \n}\n\n// ----------\n// Resource loading\n// ----------\nHashBrown.Helpers.RequestHelper.reloadResource = function reloadResource(name) {\n    let model = null;\n    let result = HashBrown.DemoApi.requestSync('get', name);\n    \n    switch(name) {\n        case 'content':\n            model = HashBrown.Models.Content;\n            break;\n\n        case 'users':\n            model = HashBrown.Models.User;\n            break;\n\n        case 'media':\n            model = HashBrown.Models.Media;\n            break;\n\n        case 'connections':\n            model = HashBrown.Models.Connection;\n            break;\n\n        case 'schemas':\n            break;\n    }\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            window.resources[name] = result;\n\n            // If a model is specified, use it to initialise every resource\n            if(model) {\n                for(let i in window.resources[name]) {\n                    window.resources[name][i] = new model(window.resources[name][i]);\n                }\n            }\n\n            resolve(result);\n        }, 100);\n    });\n};\n"],"sourceRoot":""}