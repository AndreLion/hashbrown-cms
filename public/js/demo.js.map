{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Client/demo.js"],"names":["DemoApi","reset","localStorage","setItem","location","hash","reload","getCache","resource","id","cache","getItem","JSON","parse","e","Array","isArray","getNativeResource","i","name","setCache","data","foundExisting","splice","push","stringify","request","method","url","replace","toUpperCase","debug","log","Promise","resolve","reject","setTimeout","requestSync","get","post","delete","parseUrl","query","split","params","length","indexOf","schemaId","match","Error","sort","parentId","HashBrown","Models","Content","create","console","type","isAdmin","isCurrent","username","fullName","email","scopes","media","title","locked","schemas","require","result","k","isLocked","Helpers","SchemaHelper","getModel","ContentSchema","FieldSchema","_","append","document","body","button","class","click","RequestHelper","customRequest","startSocket","getSchemaWithParentFields","schema","getSchemaByIdSync","parentSchemaId","then","parentSchema","mergedSchema","mergeSchemas","Crisp","View","prototype","fetch","view","model","modelUrl","_init","modelFunction","reloadResource","User","Media","Connection","window","resources"],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","'use strict';\n\n/**\n * Demo API\n *\n * @memberof HashBrown.Client\n */\nclass DemoApi {\n    /**\n     * Clears the cache\n     */\n    static reset() {\n        localStorage.setItem('demo', null);\n\n        location.hash = '/content/';\n        location.reload();\n    }\n\n    /**\n     * Gets the fake API cache\n     */\n    static getCache(resource, id) {\n        let cache = this.cache;\n        \n        if(!cache) {\n            try {\n                cache = localStorage.getItem('demo') || '{}';\n                cache = JSON.parse(cache);\n            } catch(e) {\n                cache = {};\n            }\n            \n            cache = cache || {};\n        }\n\n        this.cache = cache;\n\n        if(!resource) {\n            return cache;\n        }\n\n        if(!cache[resource] || !Array.isArray(cache[resource])) {\n            cache[resource] = DemoApi.getNativeResource(resource) || [];\n        }\n\n        if(!id) {\n            return cache[resource];\n        }\n\n        for(let i in cache[resource]) {\n            if(cache[resource][i].id === id || cache[resource][i].name === id) {\n                return cache[resource][i];\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the fake API\n     */\n    static setCache(resource, id, data) {\n        let cache = DemoApi.getCache();\n\n        if(!cache[resource] || !Array.isArray(cache[resource])) {\n            cache[resource] = DemoApi.getNativeResource(resource) || [];\n        }\n\n        let foundExisting = false;\n\n        for(let i in cache[resource]) {\n            if(cache[resource][i].id == id) {\n                // Update data\n                if(data) {\n                    cache[resource][i] = data;\n\n                // Delete data\n                } else {\n                    cache[resource].splice(i, 1);\n                }\n\n                foundExisting = true;\n                \n                break;\n            }\n        }\n\n        if(!foundExisting && data) {\n            cache[resource].push(data);\n        }\n\n        localStorage.setItem('demo', JSON.stringify(cache));\n\n        return data;\n    }\n\n    /**\n     * Request\n     */\n    static request(method, url, data) {\n        url = url.replace('/api/demo/live/', '');\n        method = method.toUpperCase();\n\n        debug.log(method + ' ' + url, DemoApi);\n\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(DemoApi.requestSync(method, url, data));\n            }, 100);\n        });\n    }\n\n    static requestSync(method, url, data) {\n        url = url.replace('/api/demo/live/', '');\n        method = method.toUpperCase();\n        \n        debug.log(method + ' ' + url, DemoApi);\n        \n        switch(method) {\n            case 'GET':\n                return DemoApi.get(url);\n\n            case 'POST':\n                return DemoApi.post(url, data);\n\n            case 'DELETE':\n                return DemoApi.delete(url);\n        }\n\n        return data;\n    }\n\n    /**\n     * Parses a resource url\n     */\n    static parseUrl(url) {\n        let query = {};\n        let split = url.split('/');\n\n        query.resource = split[0];\n        query.params = url.split('?')[1];\n\n        if(split.length > 1) {\n            query.id = split[1].replace('?' + query.params, '');\n        }\n\n        return query;\n    }\n\n    /**\n     * Delete\n     */\n    static delete(url) {\n        let query = DemoApi.parseUrl(url);\n\n        return DemoApi.setCache(query.resource, query.id, null);\n    }\n\n    /**\n     * Get\n     */\n    static get(url) {\n        let query = DemoApi.parseUrl(url);\n\n        return DemoApi.getCache(query.resource, query.id);\n    }\n\n    /**\n     * Post\n     */\n    static post(url, data) {\n        let query = DemoApi.parseUrl(url);\n\n        // Publish\n        if(url == 'content/publish' || url == 'content/unpublish' || url == 'content/preview') {\n            return Promise.resolve();\n        }\n\n        // Create new\n        if(url.indexOf('content/new') > -1) {\n            let schemaId = url.match(/content\\/new\\/([a-zA-Z0-9]+)/);\n\n            if(!schemaId) {\n                throw new Error('No Schema id specified');\n            }\n\n            schemaId = schemaId[1];\n\n            let sort = url.match(/\\?sort=([0-9]*)/);\n\n            if(sort) {\n                sort = sort[2];\n            }\n            \n            let parentId = url.match(/\\&parent=([0-9a-z]*)/);\n\n            if(parentId) {\n                parentId = parentId[1];\n            }\n\n            data = HashBrown.Models.Content.create(schemaId);\n                \n            data.parentId = parentId;\n            data.sort = sort;\n\n            query = {\n                resource: 'content',\n                id: data.id\n            };\n        }\n\n        console.log('--- POST data:', data);\n\n        return DemoApi.setCache(query.resource, query.id, data);\n    }\n\n    /**\n     * Gets a native resource\n     */\n    static getNativeResource(type) {\n        switch(type) {\n            case 'users':\n                return [\n                    {\n                        id: '4173f094621d4a882f912ccaf1cc6613a386519e',\n                        isAdmin: true,\n                        isCurrent: true,\n                        username: 'demouser',\n                        fullName: 'Demo User',\n                        email: 'demo@user.com',\n                        scopes: {}\n                    }\n                ];\n\n            case 'settings':\n                return [\n                    {\n                        id: 'providers',\n                        media: '8c75aa0739cf66bcac269f01ab9007e666bd941b'\n                    }\n                ];\n\n            case 'media':\n                return [\n\t\t\t\t\t{\"id\":\"50d05eee9088c589bfd5a5a3a3043c0ebcc4972b\",\"remote\":true,\"icon\":\"file-image-o\",\"name\":\"banner.jpg\",\"url\":\"media/50d05eee9088c589bfd5a5a3a3043c0ebcc4972b/banner-flat-pink.jpg\",\"folder\":\"banners\"} \n                ];\n\n            case 'connections':\n                return [\n                    {\n                        id: '8c75aa0739cf66bcac269f01ab9007e666bd941b',\n                        title: 'My website',\n                        url: 'example.com',\n                        locked: true\n                    }\n                ];\n\n            case 'content':\n                return [\n                    {\n                        \"locked\": false,\n                        \"local\": false,\n                        \"remote\": false,\n                        \"id\": \"91f1ec2b984f291377c2dc488be2ebbefb46dd9a\",\n                        \"parentId\": \"\",\n                        \"createdBy\": \"4173f094621d4a882f912ccaf1cc6613a386519e\",\n                        \"updatedBy\": \"4173f094621d4a882f912ccaf1cc6613a386519e\",\n                        \"createDate\": \"2016-09-05T06:52:17.646Z\",\n                        \"updateDate\": \"2017-08-03T15:55:10.590Z\",\n                        \"publishOn\": null,\n                        \"unpublishOn\": null,\n                        \"schemaId\": \"591a897ad572cadae5115ef05726d9ead2725dc5\",\n                        \"isPublished\": true,\n                        \"hasPreview\": false,\n                        \"sort\": -1,\n                        \"properties\": {\n                            \"title\": \"HashBrown CMS\",\n                            \"url\": \"/\",\n                            \"sections\": [\n                                {\n                                    \"value\": {\n                                        \"image\": \"50d05eee9088c589bfd5a5a3a3043c0ebcc4972b\",\n                                        \"text\": \"## HashBrown CMS\\n\\nCreate once. Publish anywhere.\" \n                                    },\n                                    \"schemaId\": \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\"\n                                },\n                                {\n                                    \"value\": {\n                                        \"text\": \"## Why HashBrown?\\n\\n### Remote management\\n\\nSeparate your concerns with a truly modern approach to content management. Your websites won't know what hit them.\\n\\n### Multiple projects at once\\n\\nWhy worry about several CMS'es, when you only need one?\\n\\n### Several environments for each project\\n\\nWe get it. You need to test your content before you go live.\\n\\n### Multilingual\\n\\nRemember the last time you used a truly elegant localisation solution in a CMS? We don't either.\\n\\n### Plugin support\\n\\nIf your needs aren't met at the core level, you can add anything you can imagine.\\n\\n### Content format consistency\\n\\nWhen you are passing complex, format-agnostic data around, document databases are the way to go. HashBrown knows what's up.\\n\\n### Painless backups\\n\\nHashBrown has your back in seconds.\\n\\n### Small footprint\\n\\nYou could probably run HashBrown on your toaster at home.\"\n                                    },\n                                    \"schemaId\": \"904e8e7570ddb37ea1f31d210db47cd15f92ff92\"\n                                }\n                            ],\n                            \"description\": \"Create once. Publish anywhere.\"\n                        },\n                        \"settings\": {\n                            \"publishing\": {\n                                \"connectionId\": \"8c75aa0739cf66bcac269f01ab9007e666bd941b\",\n                                \"applyToChildren\": true\n                            }\n                        }\n                    }\n                ];\n\n            case 'schemas':\n                let schemas = {\n                    'contentBase': require('Common/Schemas/Content/contentBase.json'),\n                    'page': require('Common/Schemas/Content/page.json'),\n                    'array': require('Common/Schemas/Field/array.json'),\n                    'boolean': require('Common/Schemas/Field/boolean.json'),\n                    'contentReference': require('Common/Schemas/Field/contentReference.json'),\n                    'contentSchemaReference': require('Common/Schemas/Field/contentSchemaReference.json'),\n                    'date': require('Common/Schemas/Field/date.json'),\n                    'dropdown': require('Common/Schemas/Field/dropdown.json'),\n                    'fieldBase': require('Common/Schemas/Field/fieldBase.json'),\n                    'language': require('Common/Schemas/Field/language.json'),\n                    'mediaReference': require('Common/Schemas/Field/mediaReference.json'),\n                    'number': require('Common/Schemas/Field/number.json'),\n                    'resourceReference': require('Common/Schemas/Field/resourceReference.json'),\n                    'richText': require('Common/Schemas/Field/richText.json'),\n                    'string': require('Common/Schemas/Field/string.json'),\n                    'struct': require('Common/Schemas/Field/struct.json'),\n                    'tags': require('Common/Schemas/Field/tags.json'),\n                    'url': require('Common/Schemas/Field/url.json'),\n                };\n       \n                let result = [];\n\n                for(let k in schemas) {\n                    schemas[k].id = k;\n\n                    if(k === 'contentBase' || k === 'page' || schemas[k].type == 'content') {\n                        schemas[k].type = 'content';\n                    } else {\n                        schemas[k].type = 'field';\n                    }\n\n                    if(schemas[k].isLocked !== false) {\n                        schemas[k].isLocked = true;\n                    }\n\n                    result.push(HashBrown.Helpers.SchemaHelper.getModel(schemas[k]));\n                }\n\n                // Section page\n                result.push(new HashBrown.Models.ContentSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"591a897ad572cadae5115ef05726d9ead2725dc5\",\n                    \"name\": \"Section Page\",\n                    \"icon\": \"file\",\n                    \"parentSchemaId\": \"page\",\n                    \"hiddenProperties\": [],\n                    \"defaultTabId\": \"content\",\n                    \"tabs\": {},\n                    \"fields\": {\n                        \"properties\": {\n                            \"sections\": {\n                                \"tabId\": \"content\",\n                                \"label\": \"Sections\",\n                                \"tabId\": \"content\",\n                                \"schemaId\": \"array\",\n                                \"config\": {\n                                    \"allowedSchemas\": [\"904e8e7570ddb37ea1f31d210db47cd15f92ff92\", \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\"]\n                                }\n                            }\n                        }\n                    },\n                    \"allowedChildSchemas\": [\"591a897ad572cadae5115ef05726d9ead2725dc5\"],\n                    \"type\": \"content\"\n                }));\n\n                // Section\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"local\": false,\n                    \"remote\": false,\n                    \"id\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"name\": \"Section\",\n                    \"icon\": \"file\",\n                    \"parentSchemaId\": \"struct\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"type\": \"field\"\n                }));\n\n                // Rich text section\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"904e8e7570ddb37ea1f31d210db47cd15f92ff92\",\n                    \"name\": \"Rich Text Section\",\n                    \"icon\": \"file-text-o\",\n                    \"parentSchemaId\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"config\": {\n                        \"struct\": {\n                            \"text\": {\n                                \"label\": \"Text\",\n                                \"tabId\": \"content\",\n                                \"schemaId\": \"richText\"\n                            }\n                        }\n                    },\n                    \"type\": \"field\"\n                }));\n\n                // Hero\n                result.push(new HashBrown.Models.FieldSchema({\n                    \"isLocked\": false,\n                    \"sync\": {\n                        \"hasRemote\": false,\n                        \"isRemote\": false\n                    },\n                    \"id\": \"f5c4cf4dffb088a2753760ad1da9cd64ff781003\",\n                    \"name\": \"Hero Section\",\n                    \"icon\": \"image\",\n                    \"parentSchemaId\": \"7ccbf2d613a4da3e5543abdde33b9eb0e5fbb8f3\",\n                    \"hiddenProperties\": [],\n                    \"editorId\": \"struct\",\n                    \"config\": {\n                        \"struct\": {\n                            \"image\": {\n                                \"label\": \"Image\",\n                                \"schemaId\": \"mediaReference\"\n                            },\n                            \"text\": {\n                                \"label\": \"Text\",\n                                \"schemaId\": \"richText\"\n                            }\n                        }\n                    },\n                    \"type\": \"field\"\n                }));\n\n                return result;\n\n            default:\n                return [];\n        }\n    }\n}\n\nHashBrown.DemoApi = DemoApi;\n\n// Add reset button\n_.append(document.body, \n    _.button({class: 'widget widget--button condensed page--environment__demo__reset'},\n        'Reset demo'\n    ).click(() => {\n        DemoApi.reset();               \n    })\n);\n\n// Override normal api call\nHashBrown.Helpers.RequestHelper.request = DemoApi.request;\nHashBrown.Helpers.RequestHelper.customRequest = DemoApi.request;\n\n// ----------\n// Debug socket\n// ----------\ndebug.startSocket = () => {}\n\n// ----------\n// SchemaHelper\n// ----------\nHashBrown.Helpers.SchemaHelper.getSchemaWithParentFields = (id) => {\n    let schema = HashBrown.Helpers.SchemaHelper.getSchemaByIdSync(id);\n\n    if(schema.parentSchemaId) {\n        return HashBrown.Helpers.SchemaHelper.getSchemaWithParentFields(schema.parentSchemaId)\n        .then((parentSchema) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    let mergedSchema = HashBrown.Helpers.SchemaHelper.mergeSchemas(schema, parentSchema);\n\n                    resolve(mergedSchema);\n                }, 100);\n            });\n        });\n    } else {\n        return Promise.resolve(schema);\n    }\n};\n\n// ----------\n// Crisp UI\n// ----------\nCrisp.View.prototype.fetch = function fetch() {\n    let view = this;\n\n    function getModel() {\n        // Get model from URL\n        if(!view.model && typeof view.modelUrl === 'string') {\n            view.model = DemoApi.requestSync('get', view.modelUrl);\n            view._init();\n        \n        // Get model with function\n        } else if(!view.model && typeof view.modelFunction === 'function') {\n            view.modelFunction(function(data) {\n                view.model = data;\n\n                view._init();\n            });\n\n        // Just perform the initialisation\n        } else {\n            view._init();\n        }\n    }\n\n    // Get the model\n    getModel();    \n}\n\n// ----------\n// Resource loading\n// ----------\nHashBrown.Helpers.RequestHelper.reloadResource = function reloadResource(name) {\n    let model = null;\n    let result = HashBrown.DemoApi.requestSync('get', name);\n    \n    switch(name) {\n        case 'content':\n            model = HashBrown.Models.Content;\n            break;\n\n        case 'users':\n            model = HashBrown.Models.User;\n            break;\n\n        case 'media':\n            model = HashBrown.Models.Media;\n            break;\n\n        case 'connections':\n            model = HashBrown.Models.Connection;\n            break;\n\n        case 'schemas':\n            break;\n    }\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            window.resources[name] = result;\n\n            // If a model is specified, use it to initialise every resource\n            if(model) {\n                for(let i in window.resources[name]) {\n                    window.resources[name][i] = new model(window.resources[name][i]);\n                }\n            }\n\n            resolve(result);\n        }, 100);\n    });\n};\n"],"sourceRoot":""}